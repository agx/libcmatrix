stages:
  - build
  - deploy

default:
  image: debian:trixie

build-soup3:
  tags:
    - librem5:arm64
  stage: build
  variables:
    CCACHE_DIR: "${CI_PROJECT_DIR}/_ccache"
    MESON_ARGS: "--buildtype=debugoptimized"
  before_script:
    - apt-get update -qq && apt-get install -qq ccache meson gcovr gcc
      libsqlite3-dev libjson-glib-dev libgcrypt20-dev
      libsoup-3.0-dev libolm-dev libsecret-1-dev
  script:
    - meson ${MESON_ARGS} -Db_coverage=true _build
    - ccache --zero-stats
    - meson test -C _build
    - ccache --show-stats
    - mkdir -p _build/meson-logs/coveragereport
    - ninja -C _build coverage-html
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'
  cache:
    key: build-cmatrix-soup3
    paths:
      - _ccache/
  artifacts:
    when: always
    paths:
      - _build

doc:
  tags:
    - librem5:arm64
  stage: build
  before_script:
    - apt-get update -qq && apt-get install -qq ccache meson gcovr gcc
      libsqlite3-dev libjson-glib-dev libgcrypt20-dev
      libolm-dev gi-docgen libgirepository1.0-dev libsecret-1-dev
      libsoup-3.0-dev
  variables:
    BUILD_OPTS: >-
      -Dgtk_doc=true
  script:
    - meson ${BUILD_OPTS} _build
    - ninja -C _build
    - mv _build/doc/libcmatrix-0 _doc/
  artifacts:
    paths:
      - _doc/

pages:
  tags:
    - librem5
  image: busybox:1
  stage: deploy
  script:
    - mkdir public
    - mv _build/meson-logs/coveragereport ${CI_PROJECT_DIR}/public/coverage
  artifacts:
    paths:
      - public
  only:
    - main
